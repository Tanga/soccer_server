module <%= name.capitalize %>
  # This is the default "in memory" <%= name.capitalize %> Repository.
  # When developing the domain, the in-memory repo makes it things fast to test
  # without mocking.  A repository is only able to do operations on the aggregate
  # head (<%= name.capitalize %>::<%= head_name.capitalize %>).  There
  # can be only one repository per module in the domain.
  class Repository
    @collection = {}

    def self.create(attributes={})
      next_id = @collection.keys.length + 1
      @collection[next_id] = <%= head_name.capitalize %>.new(attributes.merge(id: next_id))
    end
  end
end
